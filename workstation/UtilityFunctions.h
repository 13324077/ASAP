#include <QImage>

static int labelLUT[255][4] = { { 0, 0, 0, 0 }, { 0, 224, 249, 255 }, { 0, 249, 50, 255 }, { 174, 249, 0, 255 }, { 249, 100, 0, 255 }, { 249, 0, 125, 255 }, { 149, 0, 249, 255 }, { 0, 0, 206, 255 }, { 0, 185, 206, 255 }, { 0, 206, 41, 255 }, { 143, 206, 0, 255 }, { 206, 82, 0, 255 }, { 206, 0, 103, 255 }, { 124, 0, 206, 255 }, { 0, 0, 162, 255 }, { 0, 145, 162, 255 }, { 0, 162, 32, 255 }, { 114, 162, 0, 255 }, { 162, 65, 0, 255 }, { 162, 0, 81, 255 }, { 97, 0, 162, 255 }, { 0, 0, 119, 255 }, { 0, 107, 119, 255 }, { 0, 119, 23, 255 }, { 83, 119, 0, 255 }, { 119, 47, 0, 255 }, { 119, 0, 59, 255 }, { 71, 0, 119, 255 }, { 100, 100, 249, 255 }, { 100, 234, 249, 255 }, { 100, 249, 129, 255 }, { 204, 249, 100, 255 }, { 249, 159, 100, 255 }, { 249, 100, 174, 255 }, { 189, 100, 249, 255 }, { 82, 82, 206, 255 }, { 82, 193, 206, 255 }, { 82, 206, 107, 255 }, { 168, 206, 82, 255 }, { 206, 131, 82, 255 }, { 206, 82, 143, 255 }, { 156, 82, 206, 255 }, { 65, 65, 162, 255 }, { 65, 152, 162, 255 }, { 65, 162, 84, 255 }, { 132, 162, 65, 255 }, { 162, 104, 65, 255 }, { 162, 65, 114, 255 }, { 123, 65, 162, 255 }, { 47, 47, 119, 255 }, { 47, 112, 119, 255 }, { 47, 119, 61, 255 }, { 97, 119, 47, 255 }, { 119, 76, 47, 255 }, { 119, 47, 83, 255 }, { 90, 47, 119, 255 }, { 174, 174, 249, 255 }, { 174, 242, 249, 255 }, { 174, 249, 189, 255 }, { 227, 249, 174, 255 }, { 249, 204, 174, 255 }, { 249, 174, 212, 255 }, { 219, 174, 249, 255 }, { 143, 143, 206, 255 }, { 143, 199, 206, 255 }, { 143, 206, 156, 255 }, { 187, 206, 143, 255 }, { 206, 168, 143, 255 }, { 206, 143, 175, 255 }, { 181, 143, 206, 255 }, { 114, 114, 162, 255 }, { 114, 157, 162, 255 }, { 114, 162, 123, 255 }, { 147, 162, 114, 255 }, { 162, 132, 114, 255 }, { 162, 114, 137, 255 }, { 142, 114, 162, 255 }, { 83, 83, 119, 255 }, { 83, 115, 119, 255 }, { 83, 119, 90, 255 }, { 108, 119, 83, 255 }, { 119, 97, 83, 255 }, { 119, 83, 101, 255 }, { 104, 83, 119, 255 }, { 224, 224, 249, 255 }, { 224, 247, 249, 255 }, { 224, 249, 229, 255 }, { 242, 249, 224, 255 }, { 249, 234, 224, 255 }, { 249, 224, 237, 255 }, { 239, 224, 249, 255 }, { 185, 185, 206, 255 }, { 185, 204, 206, 255 }, { 185, 206, 189, 255 }, { 199, 206, 185, 255 }, { 206, 193, 185, 255 }, { 206, 185, 195, 255 }, { 197, 185, 206, 255 }, { 145, 145, 162, 255 }, { 145, 160, 162, 255 }, { 145, 162, 149, 255 }, { 157, 162, 145, 255 }, { 162, 152, 145, 255 }, { 162, 145, 153, 255 }, { 155, 145, 162, 255 }, { 107, 107, 119, 255 }, { 107, 118, 119, 255 }, { 107, 119, 109, 255 }, { 115, 119, 107, 255 }, { 119, 112, 107, 255 }, { 119, 107, 113, 255 }, { 114, 107, 119, 255 }, { 0, 0, 249, 255 }, { 0, 224, 249, 255 }, { 0, 249, 50, 255 }, { 174, 249, 0, 255 }, { 249, 100, 0, 255 }, { 249, 0, 125, 255 }, { 149, 0, 249, 255 }, { 0, 0, 206, 255 }, { 0, 185, 206, 255 }, { 0, 206, 41, 255 }, { 143, 206, 0, 255 }, { 206, 82, 0, 255 }, { 206, 0, 103, 255 }, { 124, 0, 206, 255 }, { 0, 0, 162, 255 }, { 0, 145, 162, 255 }, { 0, 162, 32, 255 }, { 114, 162, 0, 255 }, { 162, 65, 0, 255 }, { 162, 0, 81, 255 }, { 97, 0, 162, 255 }, { 0, 0, 119, 255 }, { 0, 107, 119, 255 }, { 0, 119, 23, 255 }, { 83, 119, 0, 255 }, { 119, 47, 0, 255 }, { 119, 0, 59, 255 }, { 71, 0, 119, 255 }, { 100, 100, 249, 255 }, { 100, 234, 249, 255 }, { 100, 249, 129, 255 }, { 204, 249, 100, 255 }, { 249, 159, 100, 255 }, { 249, 100, 174, 255 }, { 189, 100, 249, 255 }, { 82, 82, 206, 255 }, { 82, 193, 206, 255 }, { 82, 206, 107, 255 }, { 168, 206, 82, 255 }, { 206, 131, 82, 255 }, { 206, 82, 143, 255 }, { 156, 82, 206, 255 }, { 65, 65, 162, 255 }, { 65, 152, 162, 255 }, { 65, 162, 84, 255 }, { 132, 162, 65, 255 }, { 162, 104, 65, 255 }, { 162, 65, 114, 255 }, { 123, 65, 162, 255 }, { 47, 47, 119, 255 }, { 47, 112, 119, 255 }, { 47, 119, 61, 255 }, { 97, 119, 47, 255 }, { 119, 76, 47, 255 }, { 119, 47, 83, 255 }, { 90, 47, 119, 255 }, { 174, 174, 249, 255 }, { 174, 242, 249, 255 }, { 174, 249, 189, 255 }, { 227, 249, 174, 255 }, { 249, 204, 174, 255 }, { 249, 174, 212, 255 }, { 219, 174, 249, 255 }, { 143, 143, 206, 255 }, { 143, 199, 206, 255 }, { 143, 206, 156, 255 }, { 187, 206, 143, 255 }, { 206, 168, 143, 255 }, { 206, 143, 175, 255 }, { 181, 143, 206, 255 }, { 114, 114, 162, 255 }, { 114, 157, 162, 255 }, { 114, 162, 123, 255 }, { 147, 162, 114, 255 }, { 162, 132, 114, 255 }, { 162, 114, 137, 255 }, { 142, 114, 162, 255 }, { 83, 83, 119, 255 }, { 83, 115, 119, 255 }, { 83, 119, 90, 255 }, { 108, 119, 83, 255 }, { 119, 97, 83, 255 }, { 119, 83, 101, 255 }, { 104, 83, 119, 255 }, { 224, 224, 249, 255 }, { 224, 247, 249, 255 }, { 224, 249, 229, 255 }, { 242, 249, 224, 255 }, { 249, 234, 224, 255 }, { 249, 224, 237, 255 }, { 239, 224, 249, 255 }, { 185, 185, 206, 255 }, { 185, 204, 206, 255 }, { 185, 206, 189, 255 }, { 199, 206, 185, 255 }, { 206, 193, 185, 255 }, { 206, 185, 195, 255 }, { 197, 185, 206, 255 }, { 145, 145, 162, 255 }, { 145, 160, 162, 255 }, { 145, 162, 149, 255 }, { 157, 162, 145, 255 }, { 162, 152, 145, 255 }, { 162, 145, 153, 255 }, { 155, 145, 162, 255 }, { 107, 107, 119, 255 }, { 107, 118, 119, 255 }, { 107, 119, 109, 255 }, { 115, 119, 107, 255 }, { 119, 112, 107, 255 }, { 119, 107, 113, 255 }, { 114, 107, 119, 255 }, { 0, 0, 249, 255 }, { 0, 224, 249, 255 }, { 0, 249, 50, 255 }, { 174, 249, 0, 255 }, { 249, 100, 0, 255 }, { 249, 0, 125, 255 }, { 149, 0, 249, 255 }, { 0, 0, 206, 255 }, { 0, 185, 206, 255 }, { 0, 206, 41, 255 }, { 143, 206, 0, 255 }, { 206, 82, 0, 255 }, { 206, 0, 103, 255 }, { 124, 0, 206, 255 }, { 0, 0, 162, 255 }, { 0, 145, 162, 255 }, { 0, 162, 32, 255 }, { 114, 162, 0, 255 }, { 162, 65, 0, 255 }, { 162, 0, 81, 255 }, { 97, 0, 162, 255 }, { 0, 0, 119, 255 }, { 0, 107, 119, 255 }, { 0, 119, 23, 255 }, { 83, 119, 0, 255 }, { 119, 47, 0, 255 }, { 119, 0, 59, 255 }, { 71, 0, 119, 255 }, { 100, 100, 249, 255 }, { 100, 234, 249, 255 }, { 100, 249, 129, 255 } };
static int trafficlightLUT[255][4] = { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 255, 0, 255 }, { 2, 255, 0, 255 }, { 4, 255, 0, 255 }, { 6, 255, 0, 255 }, { 8, 255, 0, 255 }, { 10, 255, 0, 255 }, { 12, 255, 0, 255 }, { 15, 255, 0, 255 }, { 17, 255, 0, 255 }, { 19, 255, 0, 255 }, { 21, 255, 0, 255 }, { 23, 255, 0, 255 }, { 25, 255, 0, 255 }, { 27, 255, 0, 255 }, { 29, 255, 0, 255 }, { 31, 255, 0, 255 }, { 33, 255, 0, 255 }, { 35, 255, 0, 255 }, { 37, 255, 0, 255 }, { 39, 255, 0, 255 }, { 41, 255, 0, 255 }, { 44, 255, 0, 255 }, { 46, 255, 0, 255 }, { 48, 255, 0, 255 }, { 50, 255, 0, 255 }, { 52, 255, 0, 255 }, { 54, 255, 0, 255 }, { 56, 255, 0, 255 }, { 58, 255, 0, 255 }, { 60, 255, 0, 255 }, { 62, 255, 0, 255 }, { 64, 255, 0, 255 }, { 66, 255, 0, 255 }, { 68, 255, 0, 255 }, { 70, 255, 0, 255 }, { 73, 255, 0, 255 }, { 75, 255, 0, 255 }, { 77, 255, 0, 255 }, { 79, 255, 0, 255 }, { 81, 255, 0, 255 }, { 83, 255, 0, 255 }, { 85, 255, 0, 255 }, { 87, 255, 0, 255 }, { 89, 255, 0, 255 }, { 91, 255, 0, 255 }, { 93, 255, 0, 255 }, { 95, 255, 0, 255 }, { 97, 255, 0, 255 }, { 100, 255, 0, 255 }, { 102, 255, 0, 255 }, { 104, 255, 0, 255 }, { 106, 255, 0, 255 }, { 108, 255, 0, 255 }, { 110, 255, 0, 255 }, { 112, 255, 0, 255 }, { 114, 255, 0, 255 }, { 116, 255, 0, 255 }, { 118, 255, 0, 255 }, { 120, 255, 0, 255 }, { 122, 255, 0, 255 }, { 124, 255, 0, 255 }, { 126, 255, 0, 255 }, { 129, 255, 0, 255 }, { 131, 255, 0, 255 }, { 133, 255, 0, 255 }, { 135, 255, 0, 255 }, { 137, 255, 0, 255 }, { 139, 255, 0, 255 }, { 141, 255, 0, 255 }, { 143, 255, 0, 255 }, { 145, 255, 0, 255 }, { 147, 255, 0, 255 }, { 149, 255, 0, 255 }, { 151, 255, 0, 255 }, { 153, 255, 0, 255 }, { 155, 255, 0, 255 }, { 158, 255, 0, 255 }, { 160, 255, 0, 255 }, { 162, 255, 0, 255 }, { 164, 255, 0, 255 }, { 166, 255, 0, 255 }, { 168, 255, 0, 255 }, { 170, 255, 0, 255 }, { 172, 255, 0, 255 }, { 174, 255, 0, 255 }, { 176, 255, 0, 255 }, { 178, 255, 0, 255 }, { 180, 255, 0, 255 }, { 182, 255, 0, 255 }, { 185, 255, 0, 255 }, { 187, 255, 0, 255 }, { 189, 255, 0, 255 }, { 191, 255, 0, 255 }, { 193, 255, 0, 255 }, { 195, 255, 0, 255 }, { 197, 255, 0, 255 }, { 199, 255, 0, 255 }, { 201, 255, 0, 255 }, { 203, 255, 0, 255 }, { 205, 255, 0, 255 }, { 207, 255, 0, 255 }, { 209, 255, 0, 255 }, { 211, 255, 0, 255 }, { 214, 255, 0, 255 }, { 216, 255, 0, 255 }, { 218, 255, 0, 255 }, { 220, 255, 0, 255 }, { 222, 255, 0, 255 }, { 224, 255, 0, 255 }, { 226, 255, 0, 255 }, { 228, 255, 0, 255 }, { 230, 255, 0, 255 }, { 232, 255, 0, 255 }, { 234, 255, 0, 255 }, { 236, 255, 0, 255 }, { 238, 255, 0, 255 }, { 240, 255, 0, 255 }, { 243, 255, 0, 255 }, { 245, 255, 0, 255 }, { 247, 255, 0, 255 }, { 249, 255, 0, 255 }, { 251, 255, 0, 255 }, { 253, 255, 0, 255 }, { 255, 255, 0, 255 }, { 255, 253, 0, 255 }, { 255, 251, 0, 255 }, { 255, 249, 0, 255 }, { 255, 247, 0, 255 }, { 255, 245, 0, 255 }, { 255, 243, 0, 255 }, { 255, 240, 0, 255 }, { 255, 238, 0, 255 }, { 255, 236, 0, 255 }, { 255, 234, 0, 255 }, { 255, 232, 0, 255 }, { 255, 230, 0, 255 }, { 255, 228, 0, 255 }, { 255, 226, 0, 255 }, { 255, 224, 0, 255 }, { 255, 222, 0, 255 }, { 255, 220, 0, 255 }, { 255, 218, 0, 255 }, { 255, 216, 0, 255 }, { 255, 214, 0, 255 }, { 255, 211, 0, 255 }, { 255, 209, 0, 255 }, { 255, 207, 0, 255 }, { 255, 205, 0, 255 }, { 255, 203, 0, 255 }, { 255, 201, 0, 255 }, { 255, 199, 0, 255 }, { 255, 197, 0, 255 }, { 255, 195, 0, 255 }, { 255, 193, 0, 255 }, { 255, 191, 0, 255 }, { 255, 189, 0, 255 }, { 255, 187, 0, 255 }, { 255, 185, 0, 255 }, { 255, 182, 0, 255 }, { 255, 180, 0, 255 }, { 255, 178, 0, 255 }, { 255, 176, 0, 255 }, { 255, 174, 0, 255 }, { 255, 172, 0, 255 }, { 255, 170, 0, 255 }, { 255, 168, 0, 255 }, { 255, 166, 0, 255 }, { 255, 164, 0, 255 }, { 255, 162, 0, 255 }, { 255, 160, 0, 255 }, { 255, 158, 0, 255 }, { 255, 155, 0, 255 }, { 255, 153, 0, 255 }, { 255, 151, 0, 255 }, { 255, 149, 0, 255 }, { 255, 147, 0, 255 }, { 255, 145, 0, 255 }, { 255, 143, 0, 255 }, { 255, 141, 0, 255 }, { 255, 139, 0, 255 }, { 255, 137, 0, 255 }, { 255, 135, 0, 255 }, { 255, 133, 0, 255 }, { 255, 131, 0, 255 }, { 255, 129, 0, 255 }, { 255, 126, 0, 255 }, { 255, 124, 0, 255 }, { 255, 122, 0, 255 }, { 255, 120, 0, 255 }, { 255, 118, 0, 255 }, { 255, 116, 0, 255 }, { 255, 114, 0, 255 }, { 255, 112, 0, 255 }, { 255, 110, 0, 255 }, { 255, 108, 0, 255 }, { 255, 106, 0, 255 }, { 255, 104, 0, 255 }, { 255, 102, 0, 255 }, { 255, 100, 0, 255 }, { 255, 97, 0, 255 }, { 255, 95, 0, 255 }, { 255, 93, 0, 255 }, { 255, 91, 0, 255 }, { 255, 89, 0, 255 }, { 255, 87, 0, 255 }, { 255, 85, 0, 255 }, { 255, 83, 0, 255 }, { 255, 81, 0, 255 }, { 255, 79, 0, 255 }, { 255, 77, 0, 255 }, { 255, 75, 0, 255 }, { 255, 73, 0, 255 }, { 255, 70, 0, 255 }, { 255, 68, 0, 255 }, { 255, 66, 0, 255 }, { 255, 64, 0, 255 }, { 255, 62, 0, 255 }, { 255, 60, 0, 255 }, { 255, 58, 0, 255 }, { 255, 56, 0, 255 }, { 255, 54, 0, 255 }, { 255, 52, 0, 255 }, { 255, 50, 0, 255 }, { 255, 48, 0, 255 }, { 255, 46, 0, 255 }, { 255, 44, 0, 255 }, { 255, 41, 0, 255 }, { 255, 39, 0, 255 }, { 255, 37, 0, 255 }, { 255, 35, 0, 255 }, { 255, 33, 0, 255 }, { 255, 31, 0, 255 }, { 255, 29, 0, 255 }, { 255, 27, 0, 255 }, { 255, 25, 0, 255 }, { 255, 23, 0, 255 }, { 255, 21, 0, 255 }, { 255, 19, 0, 255 }, { 255, 17, 0, 255 }, { 255, 15, 0, 255 }, { 255, 12, 0, 255 }, { 255, 10, 0, 255 }, { 255, 8, 0, 255 }, { 255, 6, 0, 255 }, { 255, 4, 0, 255 }, { 255, 2, 0, 255 }, { 255, 0, 0, 255 } };

inline unsigned int applyLUT(const float& val, int LUT) {
  if (LUT == 0) {
    int ind = static_cast<unsigned int>(val) % 256;
    if (255 >= ind >= 0) {
      return qRgba(labelLUT[ind][0], labelLUT[ind][1], labelLUT[ind][2], labelLUT[ind][3]);
    }
    else {
      return qRgba(0, 0, 0, 0);
    }
  }
  else if (LUT == 1) {
    int ind = val;
    if (255 >= ind >= 0) {
      return qRgba(trafficlightLUT[ind][0], trafficlightLUT[ind][1], trafficlightLUT[ind][2], trafficlightLUT[ind][3]);
    }
    else {
      return qRgba(0, 0, 0, 0);
    }
  }
  else {
    return qRgba(val, val, val, 255);
  }
}

template<typename T>
QImage convertMonochromeToRGB(T* data, unsigned int width, unsigned int height, unsigned int channel, unsigned int numberOfChannels, double channelMin, double channelMax, int LUT = -1) {
  QImage img(width,height, QImage::Format_ARGB32_Premultiplied);

  // Access the image at low level.  From the manual, a 32-bit RGB image is just a
  // vector of QRgb (which is really just some integer typedef)
  QRgb *pixels=reinterpret_cast<QRgb*>(img.bits());

  for (unsigned int i=channel, j = 0;i < width*height*numberOfChannels; i+=numberOfChannels, ++j)
  {
    T pixel_msb = ((data[i] - channelMin) / (channelMax - channelMin))*255.;
    pixels[j] = applyLUT(pixel_msb, LUT);
  }
  return img;
}